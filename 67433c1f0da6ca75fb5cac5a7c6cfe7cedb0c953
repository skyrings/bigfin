{
  "comments": [
    {
      "key": {
        "uuid": "baada198_5817b2a3",
        "filename": "backend/salt/python/ceph/saltwrapper.py",
        "patchSetId": 4
      },
      "lineNbr": 50,
      "author": {
        "id": 1006046
      },
      "writtenOn": "2015-10-13T09:39:50Z",
      "side": 1,
      "message": "you supposes to give -1 for https://review.gerrithub.io/249375 to fix this than doing it here.",
      "range": {
        "startLine": 50,
        "startChar": 14,
        "endLine": 50,
        "endChar": 15
      },
      "revId": "67433c1f0da6ca75fb5cac5a7c6cfe7cedb0c953",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baada198_b888cec7",
        "filename": "backend/salt/python/ceph/saltwrapper.py",
        "patchSetId": 4
      },
      "lineNbr": 50,
      "author": {
        "id": 1006049
      },
      "writtenOn": "2015-10-13T10:07:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "baada198_5817b2a3",
      "revId": "67433c1f0da6ca75fb5cac5a7c6cfe7cedb0c953",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baada198_f81fa6b5",
        "filename": "main.go",
        "patchSetId": 4
      },
      "lineNbr": 27,
      "author": {
        "id": 1006046
      },
      "writtenOn": "2015-10-13T09:39:50Z",
      "side": 1,
      "message": "why is it declared twice? (see also provider.go)",
      "range": {
        "startLine": 27,
        "startChar": 18,
        "endLine": 27,
        "endChar": 24
      },
      "revId": "67433c1f0da6ca75fb5cac5a7c6cfe7cedb0c953",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baada198_58c172e3",
        "filename": "main.go",
        "patchSetId": 4
      },
      "lineNbr": 27,
      "author": {
        "id": 1006049
      },
      "writtenOn": "2015-10-13T10:07:27Z",
      "side": 1,
      "message": "Duplicate removed",
      "parentUuid": "baada198_f81fa6b5",
      "revId": "67433c1f0da6ca75fb5cac5a7c6cfe7cedb0c953",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baada198_b3aaafd2",
        "filename": "provider/cluster.go",
        "patchSetId": 4
      },
      "lineNbr": 40,
      "author": {
        "id": 1006046
      },
      "writtenOn": "2015-10-13T11:38:36Z",
      "side": 1,
      "message": "If this is a rpc funcction for any provider, skyring core should define it as interface and ceph provider implements it.",
      "range": {
        "startLine": 40,
        "startChar": 23,
        "endLine": 40,
        "endChar": 36
      },
      "revId": "67433c1f0da6ca75fb5cac5a7c6cfe7cedb0c953",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baada198_73873762",
        "filename": "provider/cluster.go",
        "patchSetId": 4
      },
      "lineNbr": 40,
      "author": {
        "id": 1006049
      },
      "writtenOn": "2015-10-13T11:44:21Z",
      "side": 1,
      "message": "Thats valid one. Will do that.",
      "parentUuid": "baada198_b3aaafd2",
      "revId": "67433c1f0da6ca75fb5cac5a7c6cfe7cedb0c953",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baada198_f3ab47d4",
        "filename": "provider/cluster.go",
        "patchSetId": 4
      },
      "lineNbr": 133,
      "author": {
        "id": 1006046
      },
      "writtenOn": "2015-10-13T11:38:36Z",
      "side": 1,
      "message": "why is the response as byte array?  The interface should define what type of return value the rpc function supposes to return.",
      "range": {
        "startLine": 133,
        "startChar": 16,
        "endLine": 133,
        "endChar": 29
      },
      "revId": "67433c1f0da6ca75fb5cac5a7c6cfe7cedb0c953",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baada198_b381cf4c",
        "filename": "provider/cluster.go",
        "patchSetId": 4
      },
      "lineNbr": 133,
      "author": {
        "id": 1006049
      },
      "writtenOn": "2015-10-13T11:44:21Z",
      "side": 1,
      "message": "Response is always supposed to be a marshalled json in the format \n\n{\n  \"status\": {\"statuscode\": \u003chttp status code\u003e, \"statusmessage\": \"\u003cmsg\u003e\"},\n  \"data\": {\"requestid\": \"\u003cid for async calls\u003e\", \"result\": []byte}\n}\n\nAnyway above mentioned interface, would explain the requirements clearly.",
      "parentUuid": "baada198_f3ab47d4",
      "revId": "67433c1f0da6ca75fb5cac5a7c6cfe7cedb0c953",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baada198_73ee5724",
        "filename": "provider/cluster.go",
        "patchSetId": 4
      },
      "lineNbr": 133,
      "author": {
        "id": 1006046
      },
      "writtenOn": "2015-10-13T11:53:32Z",
      "side": 1,
      "message": "Why can\u0027t it be statically typed?  That will catch runtime errors at compile time itself.",
      "parentUuid": "baada198_b381cf4c",
      "revId": "67433c1f0da6ca75fb5cac5a7c6cfe7cedb0c953",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baada198_533793b0",
        "filename": "provider/cluster.go",
        "patchSetId": 4
      },
      "lineNbr": 133,
      "author": {
        "id": 1006049
      },
      "writtenOn": "2015-10-13T12:20:30Z",
      "side": 1,
      "message": "Not sure. This is how it was defined while spec definition.\n@Nishant, can you comment on this?",
      "parentUuid": "baada198_73ee5724",
      "revId": "67433c1f0da6ca75fb5cac5a7c6cfe7cedb0c953",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baada198_b3e2af01",
        "filename": "provider/cluster.go",
        "patchSetId": 4
      },
      "lineNbr": 133,
      "author": {
        "id": 1006044
      },
      "writtenOn": "2015-10-13T12:50:00Z",
      "side": 1,
      "message": "Are you not using the the RPCOUT struct here?. If not we should use that and marshal to the byte array and send it across",
      "parentUuid": "baada198_533793b0",
      "revId": "67433c1f0da6ca75fb5cac5a7c6cfe7cedb0c953",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baada198_33469fc0",
        "filename": "provider/cluster.go",
        "patchSetId": 4
      },
      "lineNbr": 133,
      "author": {
        "id": 1006046
      },
      "writtenOn": "2015-10-13T13:23:16Z",
      "side": 1,
      "message": "As any provider is golang code, why is it required to be marshal to byte array?",
      "parentUuid": "baada198_b3e2af01",
      "revId": "67433c1f0da6ca75fb5cac5a7c6cfe7cedb0c953",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baada198_d8690227",
        "filename": "provider/models.go",
        "patchSetId": 4
      },
      "lineNbr": 16,
      "author": {
        "id": 1006046
      },
      "writtenOn": "2015-10-13T09:39:50Z",
      "side": 1,
      "message": "1. why do you need this abstraction?\n2. You are in ceph provider.  Why do you call CephProvider here?",
      "range": {
        "startLine": 16,
        "startChar": 5,
        "endLine": 16,
        "endChar": 17
      },
      "revId": "67433c1f0da6ca75fb5cac5a7c6cfe7cedb0c953",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baada198_1890daeb",
        "filename": "provider/models.go",
        "patchSetId": 4
      },
      "lineNbr": 16,
      "author": {
        "id": 1006049
      },
      "writtenOn": "2015-10-13T10:07:27Z",
      "side": 1,
      "message": "This source not required. In main.go we need a struct to define the RPC method.",
      "parentUuid": "baada198_d8690227",
      "revId": "67433c1f0da6ca75fb5cac5a7c6cfe7cedb0c953",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baada198_18745afc",
        "filename": "utils/utils.go",
        "patchSetId": 4
      },
      "lineNbr": 35,
      "author": {
        "id": 1006046
      },
      "writtenOn": "2015-10-13T09:39:50Z",
      "side": 1,
      "message": "If these functions are generic for all providers, it should be a package in skyring core.",
      "range": {
        "startLine": 35,
        "startChar": 8,
        "endLine": 35,
        "endChar": 15
      },
      "revId": "67433c1f0da6ca75fb5cac5a7c6cfe7cedb0c953",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baada198_38bcbe6c",
        "filename": "utils/utils.go",
        "patchSetId": 4
      },
      "lineNbr": 35,
      "author": {
        "id": 1006049
      },
      "writtenOn": "2015-10-13T10:07:27Z",
      "side": 1,
      "message": "Done. Will add two generic methods\n1. for writing a sync response without requestid populated\n2. for writing async response with requestid populated",
      "parentUuid": "baada198_18745afc",
      "revId": "67433c1f0da6ca75fb5cac5a7c6cfe7cedb0c953",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}